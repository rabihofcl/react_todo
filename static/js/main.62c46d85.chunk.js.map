{"version":3,"sources":["components/Form/Form.js","components/Todo/Todo.js","components/TodoList/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","editTodo","setEditTodo","useEffect","text","className","onChange","e","target","value","name","type","onClick","preventDefault","id","completed","newTodo","map","todo","updateTodo","Math","random","class","Todo","index","date","Date","toDateString","item","findTodo","find","handleEdit","filter","el","TodoList","filterTodos","App","useState","status","setFilterTodos","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62c46d85.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\n// importing css\nimport './Form.css'\n\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus, editTodo, setEditTodo }) => {\n\n    const updateTodo = (text, id, completed) => {\n        const newTodo = todos.map((todo) =>\n            todo.id === id ? { text, id, completed } : todo\n        );\n        setTodos(newTodo);\n        setEditTodo(\"\");\n    };\n\n    useEffect(() => {\n        if (editTodo) {\n            setInputText(editTodo.text);\n        } else {\n            setInputText(\"\");\n        }\n    }, [setInputText, editTodo])\n\n\n    const inputTextHandler = (e) => {\n        setInputText(e.target.value);\n    }\n\n    const submitTodoHandler = (e) => {\n        e.preventDefault();\n        if (!editTodo) {\n            setTodos([\n                ...todos,\n                { text: inputText, completed: false, id: Math.random() * 1000 },\n            ]);\n            setInputText(\"\");\n        } else {\n            updateTodo(inputText, editTodo.id, editTodo.completed)\n        }\n\n    }\n    const statusHandler = (e) => {\n        setStatus(e.target.value)\n    }\n\n\n\n    return (\n        <form>\n            <div className='row form-div'>\n                <div className=\"col-md-12\">\n                    <div className=\"row\">\n                        <div className=\"col-md-3 col-3\">\n                            <select onChange={statusHandler} name=\"todos\" className='filter-todo'>\n                                <option value=\"all\">All</option>\n                                <option value=\"completed\">Completed</option>\n                                <option value=\"uncompleted\">Uncompleted</option>\n                            </select>\n                        </div>\n                        <div className=\"col-md-8 col-8\">\n                            <input onChange={inputTextHandler} value={inputText} type=\"text\" className='todo-input' />\n                        </div>\n                        <div className=\"col-md-1 col-1 text-center\">\n                            <button onClick={submitTodoHandler} type='submit' className='todo-add-button'><i class=\"fas fa-plus fa-2x\"></i></button>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        </form>\n    );\n}\n\nexport default Form","import React from 'react'\nimport './Todo.css'\n\nfunction Todo({ text, todo, todos, setTodos, setEditTodo, index }) {\n\n    const date = new Date()\n\n    const deleteHandler = () => {\n        setTodos(todos.filter((el) => el.id !== todo.id));\n    }\n\n    const completeHandler = () => {\n        setTodos(todos.map(item => {\n            if (item.id === todo.id) {\n                return {\n                    ...item, completed: !item.completed\n                }\n            }\n            return item;\n        }))\n\n    }\n\n    const handleEdit = ({ id }) => {\n        const findTodo = todos.find((todo) => todo.id === id);\n        setEditTodo(findTodo);\n    }\n\n\n    return (\n        <div className={`row todo-div ${todo.completed ? \"completed\" : \"\"}`}>\n            <div className=\"col-md-12 \">\n                <div className='row list-banner'>\n                    <div className='col-md-2 col-2'>\n                        <p className='index-no'>{index+1}</p>\n                    </div>\n                    <div className='col-md-6 col-6'>\n                        <p className='date'><small>{date.toDateString()}</small></p>\n                    </div>\n                    <div className='col-md-4 col-4 btns'>\n                        <div className=\"col-md-3 col-4\">\n                            <button onClick={completeHandler} className=\"complete-btn btn-cls\"><i className=\"fas fa-check\"></i></button>\n                        </div>\n                        <div className=\"col-md-3 col-4\">\n                            <button onClick={() => handleEdit(todo)} className=\"edit-btn btn-cls\"><i className=\"fas fa-pen\"></i></button>\n                        </div>\n                        <div className=\"col-md-3 col-4\">\n                            <button onClick={deleteHandler} className=\"trash-btn btn-cls\"><i className=\"fas fa-trash\"></i></button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className={`col-md-12 col-12 ${todo.completed ? \"completed\" : \"\"}`} >\n                        <label className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</label>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Todo\n","import React from \"react\";\nimport Todo from \"../Todo/Todo\";\nimport './TodoList.css'\n\nconst TodoList = ({ todos, setTodos, filterTodos, setEditTodo }) => {\n    return (\n        <div className='todolist-div'>\n            <ul className='todo-list'>\n                {filterTodos.map((todo, index) => (\n                    <Todo todos={todos} setTodos={setTodos} key={todo.id} todo={todo} text={todo.text} setEditTodo={setEditTodo} index={index}/>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default TodoList","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\n// importing components\nimport Form from './components/Form/Form';\nimport TodoList from './components/TodoList/TodoList';\n\nfunction App() {\n\n\n\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filterTodos, setFilterTodos] = useState([]);\n  const [editTodo, setEditTodo] = useState(null);\n\n\n  //RUN ONCE when the app start\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  // USE EFFECT\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();      // eslint-disable-next-line \n  }, [todos, status]);\n\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilterTodos(todos.filter(todos => todos.completed === true))\n        break;\n      case 'uncompleted':\n        setFilterTodos(todos.filter(todos => todos.completed === false))\n        break;\n      default:\n        setFilterTodos(todos);\n        break;\n    }\n  };\n  //save Local\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal)\n    }\n  };\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"row\">\n            <div className=\"col-md-4 col-4\"></div>\n            <div className=\"col-md-4\">\n              <div className=\"container\">\n                <header className='todo-header'>\n                  <h1>ToDo List</h1>\n                </header>\n                <Form\n                  inputText={inputText}\n                  todos={todos}\n                  setTodos={setTodos}\n                  setInputText={setInputText}\n                  setStatus={setStatus}\n                  editTodo={editTodo}\n                  setEditTodo={setEditTodo}\n                />\n                <TodoList\n                  filterTodos={filterTodos}\n                  todos={todos}\n                  setTodos={setTodos}\n                  setEditTodo={setEditTodo}\n                />\n              </div>\n\n            </div>\n            <div className=\"col-md-4 col-4\"></div>\n          </div>\n        </div>\n\n\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}